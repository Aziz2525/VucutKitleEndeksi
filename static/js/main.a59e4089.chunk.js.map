{"version":3,"sources":["logo.svg","App.js","serviceWorker.js","index.js"],"names":["module","exports","App","props","state","cm","kg","zayif","normal","fazla_kilolu","sisman_1","sisman_2","sisman_3","mesaj","handleChange","bind","handleChange1","handleSubmit","event","this","setState","target","value","alert","metre","endeks","class","style","color","fontWeight","padding","width","border","borderWidth","borderColor","borderRadius","fontSize","id","name","type","placeholder","maxLength","onChange","maxlength","marginTop","onClick","textAlign","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"uKAAAA,EAAOC,QAAU,IAA0B,kC,kKCMtBC,G,gCACnB,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KACDC,MAAQ,CACXC,GAAG,KACHC,GAAG,KACHC,MAAM,KACNC,OAAO,KACPC,aAAa,GACbC,SAAS,GACTC,SAAS,GACTC,SAAS,GACTC,MAAM,IAEP,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,cAAgB,EAAKA,cAAcD,KAAnB,gBACrB,EAAKE,aAAe,EAAKA,aAAaF,KAAlB,gBAfJ,E,uHAsBNG,GACXC,KAAKC,SAAS,CAACf,GAAIa,EAAMG,OAAOC,U,oCAEpBJ,GACZC,KAAKC,SAAS,CAACd,GAAIY,EAAMG,OAAOC,U,mCAErBJ,GACX,GAAoB,MAAjBC,KAAKf,MAAMC,GAEZkB,MAAM,mCAEN,GAAoB,MAAjBJ,KAAKf,MAAME,GACZiB,MAAM,kCACH,CACH,IAAIC,EAAQL,KAAKf,MAAMC,GAAG,IACtBoB,EAASN,KAAKf,MAAME,IAAIkB,EAAMA,GAC/BC,EAAON,KAAKf,MAAMG,OACnBY,KAAKC,SAAS,CAACP,MAAM,kdAClBY,EAAON,KAAKf,MAAMI,SACnBW,KAAKC,SAAS,CAACP,MAAM,+PAClBY,EAAON,KAAKf,MAAMK,eACnBU,KAAKC,SAAS,CAACP,MAAM,kUAClBY,EAAON,KAAKf,MAAMM,WACnBS,KAAKC,SAAS,CAACP,MAAM,goBAElBY,EAAON,KAAKf,MAAMO,WACnBQ,KAAKC,SAAS,CAACP,MAAM,yoBAElBY,EAAON,KAAKf,MAAMQ,UACnBO,KAAKC,SAAS,CAACP,MAAM,qoBAkB/BM,KAAKC,SAAS,CAACP,MAAM,+C,+BASnB,IAAD,OACP,OACE,yBAAKa,MAAM,cACT,wBAAIC,MAAO,CAACC,MAAM,QAAQC,WAAW,SAArC,0BAEA,yBAAKF,MAAO,CAACG,QAAQ,GAAGC,MAAM,OAAOC,OAAO,QAAQC,YAAY,EAAEC,YAAY,UAAUC,aAAa,IACrG,8BACE,uBAAGR,MAAO,CAACS,SAAS,KAApB,cACA,4BAAQC,GAAG,UAAUC,KAAK,WACxB,4BAAQhB,MAAM,SAAd,SACA,4BAAQA,MAAM,SAAd,eAEF,uBAAIK,MAAO,CAACS,SAAS,KAArB,aACA,2BAAOG,KAAK,SAASC,YAAY,KAAKC,UAAW,EAAGnB,MAAOH,KAAKf,MAAMC,GAAIqC,SAAUvB,KAAKL,eACzF,uBAAIa,MAAO,CAACS,SAAS,KAArB,aACA,2BAAOG,KAAK,SAASC,YAAY,KAAKG,UAAU,IAAKrB,MAAOH,KAAKf,MAAME,GAAIoC,SAAUvB,KAAKH,iBAG1F,4BAAQW,MAAO,CAACiB,UAAU,IAAKC,QAAS,kBAAI,EAAK5B,iBAAjD,YAEN,yBAAKU,MAAO,CAACiB,UAAU,GAAGE,UAAU,SAASf,MAAM,QAASZ,KAAKf,MAAMS,Y,GAnG1CkC,IAAMC,YCMnBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.a59e4089.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { ToastContainer } from \"react-toastr\";\nimport { ToastMessage } from \"react-toastr\";\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n      cm:null,\n      kg:null,\n      zayif:18.4,\n      normal:18.5,\n      fazla_kilolu:25.0,\n      sisman_1:30.0,\n      sisman_2:35.0,\n      sisman_3:45.0,\n      mesaj:\"\"\n     };\n     this.handleChange = this.handleChange.bind(this);\n     this.handleChange1 = this.handleChange1.bind(this);\n     this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n \n  }\n\n  handleChange(event) {\n    this.setState({cm: event.target.value});\n  }\n  handleChange1(event) {\n    this.setState({kg: event.target.value});\n  }\n  handleSubmit(event) {\n    if(this.state.cm == null){\n      \n      alert('Lütfen boyunuzu girin !');\n    }else{\n      if(this.state.kg == null){\n        alert('Lütfen kilonuzu girin !');\n      }else{\n        var metre = this.state.cm/100;\n        var endeks= (this.state.kg/(metre*metre));\n        if(endeks>this.state.zayif){\n          this.setState({mesaj:\"Zayıfsın ! Uzunluğunuza göre uygun ağırlıkta olmadığınızı, zayıf olduğunuzu gösterir. Zayıflık, bazı hastalıklar için risk oluşturan ve istenmeyen bir durumdur. Boyunuza uygun ağırlığa erişmeniz için yeterli ve dengeli beslenmeli, beslenme alışkanlıklarınızı geliştirmeye özen göstermelisiniz.\"})\n          if(endeks>this.state.normal){\n            this.setState({mesaj:\"Normalsin ! Uzunluğunuza göre uygun ağırlıkta olduğunuzu gösterir. Yeterli ve dengeli beslenerek ve düzenli fiziksel aktivite yaparak bu ağırlığınızı korumaya özen gösteriniz.\"})\n            if(endeks>this.state.fazla_kilolu){\n              this.setState({mesaj:\"Fazla Kilolusun ! Boyunuza göre vücut ağırlığınızın fazla olduğunu gösterir. Fazla kilolu olma durumu gerekli önlemler alınmadığı takdirde pek çok hastalık için risk faktörü olan obeziteye (şişmanlık) yol açar.\"})\n              if(endeks>this.state.sisman_1){\n                this.setState({mesaj:\"1. Derece Obezsin ! Boyunuza göre vücut ağırlığınızın fazla olduğunu bir başka deyişle şişman olduğunuzun bir göstergesidir. Şişmanlık, kalp-damar hastalıkları, diyabet, hipertansiyon v.b. kronik hastalıklar için risk faktörüdür. Bir sağlık kuruluşuna başvurarak hekim / diyetisyen kontrolünde zayıflayarak normal ağırlığa inmeniz sağlığınız açısından çok önemlidir. Lütfen, sağlık kuruluşuna başvurunuz.\"})\n\n                if(endeks>this.state.sisman_2){\n                  this.setState({mesaj:\"2. Derece Obezsin ! Uzunluğunuza göre vücut ağırlığınızın fazla olduğunu bir başka deyişle şişman olduğunuzun bir göstergesidir. Şişmanlık, kalp-damar hastalıkları, diyabet, hipertansiyon v.b. kronik hastalıklar için risk faktörüdür. Bir sağlık kuruluşuna başvurarak hekim / diyetisyen kontrolünde zayıflayarak normal ağırlığa inmeniz sağlığınız açısından çok önemlidir. Lütfen, sağlık kuruluşuna başvurunuz.\"})\n\n                  if(endeks>this.state.sisman_3){\n                    this.setState({mesaj:\"3. Derece Obezsin ! Boyunuza göre vücut ağırlığınızın fazla olduğunu bir başka deyişle şişman olduğunuzun bir göstergesidir. Şişmanlık, kalp-damar hastalıkları, diyabet, hipertansiyon v.b. kronik hastalıklar için risk faktörüdür. Bir sağlık kuruluşuna başvurarak hekim / diyetisyen kontrolünde zayıflayarak normal ağırlığa inmeniz sağlığınız açısından çok önemlidir. Lütfen, sağlık kuruluşuna başvurunuz.\"})\n\n                  }else{\n                    \n                  }\n                }else{\n                  \n                }\n              }else{\n                \n              }\n            }else{\n              \n            }\n          }else{\n            \n          }\n        }else{\n          this.setState({mesaj:\"Aşırı zayıfsın\"})\n        }\n      }  \n    }\n  \n  }\n\n  \n\n  render() {\n    return (\n      <div class=\"App-header\">\n        <h1 style={{color:'white',fontWeight:'bold'}}>Vücut Kitle Endeksi</h1>\n        \n        <div style={{padding:60,width:'auto',border:'solid',borderWidth:1,borderColor:'#9A9695',borderRadius:6}}>\n        <form >\n          <p style={{fontSize:18}}>Cinsiyet :</p> \n          <select id=\"country\" name=\"country\">\n            <option value=\"erkek\">Erkek</option>\n            <option value=\"kadin\">Kadın</option>\n          </select>\n          <p  style={{fontSize:18}}>Boyunuz :</p> \n          <input type=\"number\" placeholder=\"Cm\" maxLength={3} value={this.state.cm} onChange={this.handleChange}/>\n          <p  style={{fontSize:18}}>Kilonuz :</p> \n          <input type=\"number\" placeholder=\"Kg\" maxlength=\"3\"  value={this.state.kg} onChange={this.handleChange1}/>\n          </form>\n      \n          <button style={{marginTop:20}} onClick={()=>this.handleSubmit()} >Hesapla</button>\n        </div>\n    <div style={{marginTop:50,textAlign:'center',width:'60%'}}>{this.state.mesaj}</div>\n      \n      </div>\n    );\n  }\n}\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}